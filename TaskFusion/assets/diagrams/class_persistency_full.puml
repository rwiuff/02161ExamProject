@startuml ClassDiagram_full
skinparam linetype ortho
skinparam Nodesep 150
skinparam Ranksep 150





package "Facade-layer" as FacadeLayer {

    class "TaskFusion" as app{
        loggedInUser : Employee
        --
        + login(initials) : boolean
        + logout()
        + isLoggedIn() : boolean
    }

    class EmployeeFacade {
        --
        + registerEmployee(firstName, lastName) : void
        + findEmployeeByInitials(initials) : EmployeeViewModel
        + createRegularActivity(title,startWeek, endWeek) : void
        + hasRegularActivity(title, startWeek, endWeek) : boolean
        + getRegularActivityById(id) : RegularActivityViewModel
    }

    class ProjectFacade {
        + createProject(title)
        + assignCustomerToProject(projectNumber, customerName)
        + assignEmployeeToProject(projectNumber, initials) : void
        + takeProjectLeaderRole(projectNumber) : void
        + findProjectByProjectNumber(projectNumber) : ProjectViewModel
        + generateProjectRaport(projectNumber) : ReportViewModel
        + saveReport(projectNumber, reportDate, saveDirectory) : void
        + createProjectActivity(projectNumber, title, startWeek, endWeek) : void
        + setTimeBudget(projectNumber, projectActivityTitle, Integer timeBudget) : void
        + registerWorkTime(projectNumber, activityTitle, double workTime) : void
        + getTotalWorkTimeForEmployee(projectNumber, activityTitle, double workTime) : double
        + getUserWorktimeRegistrationsForProjectActivity(activityTitle, projectNumber) : List
        + getUserWorktimeForProjectActivity(activityTitle, projectNumber) : double
        + getTotalWorktimeRegistrationsForProject(projectNumber) : List
        + editWorktimeRegistration(int id, double hours) : void
        + getRemainingWorktimeForActivity(projectNumber, activityTitle) : double
        + getUserProjects() : List

    }
}


package "Persistency-layer" as PersistencyLayer {
    class ProjectRepository << (S,#FF7700) Singleton >>{
        --
        {static} getInstance() : ProjectRepository
        + findByProjectNumber(projectNumber) : Project
        + create(title, date) : Project
        + findWorktimeRegistrationById(int id) : WorktimeRegistration
        + generateWorktimeRegistrationId() : int
        + getListOfEmployees(String projectNumber) : List
    }

    class EmployeeRepository << (S,#FF7700) Singleton >>{
        --
        {static} getInstance() : EmployeeRepository
        + findByInitials(initials) : Employee
        + create(firstName,lastName) : Employee
        + initialsExist(String initials) : boolean
        + generateRegularActivityId() : int
    }

}


package "Domain-layer" as DomainLayer {

    interface ConvertibleToViewModel{
        + toViewModel() : ViewModel
    }

    class Report {
        title : String 
        projectNumber : String 
        customer : String 
        reportDate : Calendar
        --
        saveReport(saveDirectory) : void
        
    }

    class Project{
        projectTitle : String 
        projectNumber : String
        customer : String
        --
        + isInternal() : boolean
        {static} generateProjectNumber(date) : String
        + assignEmployee(employeeInitials, loggedInUser) : void
        + createProjectActivity(title, startWeek, endWeek,loggedInUser) : ProjectActivity 
        + hasProjectActivity(String title) : boolean
        + hasProjectLeader() : boolean
        + findProjectActivity(title) : ProjectActivity
        + addLatestReport(date, Report report) : void
        + setActivityTimeBudget(employee, projectActivityTitle, timeBudget) : void

    }

    class ProjectActivity{
        timeBudget : int
        --
        registerWorkTime(employee, date, workTime) : void
        sumWorkTime() : double
        getRemainingWorkTime() : double
        getWorkTimeRegistrationsForEmployee(initials) : List
    }

    class Activity <<(A, orchid)abstract>>{
        title : String
        startWeek : String
        endWeek : String
        --
    }
    class RegularActivity{
        id : int
        --
    }

    class Employee{
        initials : String
        firstName : String
        lastName : String
        --
        + hasRegularActivity(title, startWeek, endWeek) : boolean
        + hasRegularActivityWithId(id) : boolean
        + isSameAs(otherEmployee) : boolean
    }

    class WorktimeRegistration {
        id : int
        initials : String
        time : double
        date : Calendar
    }

}

PersistencyLayer -d[hidden]-> DomainLayer

app --> "1" ProjectFacade : projectFacade
app --> "1" EmployeeFacade : employeeFacade

ProjectFacade --> "1" ProjectRepository : projectRepository
EmployeeFacade --> "1" EmployeeRepository : employeeRepository

ProjectRepository --> "0..*" Project : projects
Project --> "0..*" Report : reports

EmployeeRepository --> "0..*" Employee : employees

app --> "0..1" Employee : user

Activity <|-- ProjectActivity
Activity <|- RegularActivity

Project --> "1" Employee : projectLeader
Project --> "0..*" Employee : employees
Employee --> "0..*" Project : projects
Project -> "0..*" ProjectActivity : activities
Employee -> "0..*" RegularActivity : regularActivities

Report --> "1" Employee : projectLeader
Report --> "0..*" Employee : employees
Report --> "0..*" ProjectActivity : activities

ProjectActivity --> "0..*" WorktimeRegistration : worktimeRegistrations

'Employee --> "0..*" WorktimeRegistrations : worktimeRegistrations
Project ..|> ConvertibleToViewModel
Employee ..|> ConvertibleToViewModel
ProjectActivity ..|> ConvertibleToViewModel
RegularActivity ..|> ConvertibleToViewModel
WorktimeRegistration ..|> ConvertibleToViewModel
Report ..|> ConvertibleToViewModel

@enduml